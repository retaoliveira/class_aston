install.packages("sf")
install.packages("sp")
install.packages("qcc")
install.packages("SixSigma")
install.packages("geobr")
install.packages("geofabrik")
install.packages("GISTools")
install.packages("rgdal")
install.packages("raster")
install.packages("bookdown")
install.packages("bookdownplus")
install.packages("rmarkdown")
install.packages("rticles")
install.packages("pkgdown")
install.packages("knitr")
install.packages("knitrProgressBar")
install.packages("knitrBootstrap")
install.packages("distill")
install.packages("dplyr")
install.packages("tidyverse")
install.packages("usethis")
install.packages("broom")
install.packages("xaringanthemer")
install.packages("xaringan")
install.packages("bupaR")
install.packages("cartography")
install.packages("cartogram")
install.packages("coronavirus")
install.packages("ColorPalette")
install.packages("tmap")
install.packages("tmaptools")
install.packages("igraph")
install.packages("corrplot")
install.packages("cowplot")
install.packages("ggpubr")
install.packages("osmar")
install.packages("osmose")
install.packages("osmplotr")
install.packages("OpenStreetMap")
install.packages("openair")
install.packages("pagedown")
install.packages("crosstalk")
install.packages("networkD3")
install.packages("mapStats")
install.packages("SpatEntropy")
install.packages("spdep")
install.packages("spatstat")
install.packages("googleAuthR")
install.packages("googledrive")
install.packages("googleformr")
install.packages("prettydoc")
install.packages("flexdashboard")
install.packages("kableExtra")
install.packages("RColorBrewer")
install.packages("rmapshaper")
install.packages("leafletR")
install.packages("leaflet.extras2")
devtools::install_github("r-lib/pkgdown")
library(usethis)
usethis::use_git_config(user.name = "Renata Oliveira", # Seu nome
user.email = "renataoliveira@gmail.com")
usethis::browse_github_token()
usethis::edit_r_environ()
usethis::edit_r_environ()
remotes::install_github("gadenbuie/xaringanExtra")
knitr::opts_chunk$set(echo = FALSE)
library(sp)
library(ggplot2)
library(rgeos)
library(spatstat)
library(readr)
library(tidyverse)
library(sf)
library(tmap)
library(tmaptools)
bairro <- st_read("D:/OneDrive - cefetmg.br/01_disciplinas/ERE/gis/R/sobreposicao/BAIRRO.shp")
bairro <- st_read("D:/google_drive/01_courses\ERE\gis\02_pratica\dados_espaciais/BAIRRO/BAIRRO.shp")
bairro <- st_read("D:/google_drive/01_courses/ERE/gis/02_pratica/dados_espaciais/BAIRRO/BAIRRO.shp")
bairro <- st_read("D:/google_drive/01_courses/ERE/map/BAIRRO/BAIRRO.shp")
ped <- st_read("D:/google_drive/01_courses/ERE/map/ESCOLAS_MUNICIPAIS_ENSINO_FUNDAMENTAL/ESCOLAS_MUNICIPAIS_ENSINO_FUNDAMENTAL.shp")
cens <- st_read("D:/google_drive/01_courses/ERE/map/setores_censitarios_renda/setores_censitarios_renda.shp")
tm_shape(cens) +
tm_polygons() +
tm_shape(bairro) +
tm_borders(col = "red", alpha = 0.5, lwd = 1.5)
tm_shape(bairro) +
tm_polygons(col = "white") +
tm_shape(ped) +
tm_dots(col = "#FB6A4A", size = 0.04, shape = 1, alpha = 0.8) +
tm_layout(frame = F)
tm_shape(bairro) +
tm_polygons(col = "white") +
tm_shape(escola) +
tm_dots(col = "#FB6A4A", size = 0.04, shape = 1, alpha = 0.8) +
tm_layout(frame = F)
tm_shape(bairro) +
tm_polygons(col = "white") +
tm_shape(escola) +
tm_dots(col = "#FB6A4A", size = 0.04, shape = 1, alpha = 0.8) +
tm_layout(frame = F)
escola <- st_read("D:/google_drive/01_courses/ERE/map/ESCOLAS_MUNICIPAIS_ENSINO_FUNDAMENTAL/ESCOLAS_MUNICIPAIS_ENSINO_FUNDAMENTAL.shp")
tm_shape(bairro) +
tm_polygons(col = "white") +
tm_shape(escola) +
tm_dots(col = "#FB6A4A", size = 0.04, shape = 1, alpha = 0.8) +
tm_layout(frame = F)
library(dplyr)
bairro2 = bairro %>%
st_join(cens) %>%
group_by(ID) %>%
summarize(renda = mean(`Renda_Méd`, na.rm = TRUE))
View(bairro2)
head(bairro2)
tm_shape(bairro2) +
tm_borders(col = "black") +
tm_fill(col="renda", palette = viridisLite :: viridis(20), style = "jenks", n=4, legend.reverse = FALSE, title = " Renda média domiciliar em bairros")
st_crs(ped)
st_crs(escola)
st_crs(bairro)
st_crs(escola) == st_crs(bairro)
class(escola)
class(bairro)
escola.count <- st_join(escola, bairro, join = st_within)
View(escola.count)
head(escola.count)
names(escola.count)
# contar ped por bairro
escola_bairro_count <- count(as_tibble(escola.count), NOME) %>%
print()
# contar escola por bairro
escola_bairro_count <- count(as_tibble(escola.count), NOME) %>%
print()
View(escola.count)
# contar escola por bairro
escola_bairro_count <- count(as_tibble(escola.count), NOME.x) %>%
print()
# join contagem de ped com os bairros
bairro_escola_sf <- left_join(bairro, escola_bairro_count) %>%
print()
View(bairro)
View(escola.count)
bairro_sf <- st_as_sf(bairro_sp)
library(raster)
usethis::use_git()
install.packages("blogdown")
install.packages(c("backports", "cli", "colorspace", "cpp11", "deldir", "downlit", "jqr", "lubridate", "magick", "magrittr", "openair", "osmdata", "pillar", "raster", "RcppArmadillo", "rprojroot", "rstudioapi", "spatstat.data", "textshaping", "V8", "vctrs", "waldo"))
install.packages("pagedown")
install.packages("tidyverse")
devtools::install_github("r-lib/hugodown")
create_site_academic()
library(hugodown)
create_site_academic()
create_site_academic(
path = "D:/Dropbox/places_site",
open = is_interactive(),
rstudio = rstudioapi::isAvailable()
)
update_hugo()
library(blogdown)
update_hugo()
```
#install.packages(c("devtools", "roxygen2", "learnr"))
library(devtools)
library(usethis)
library(roxygen2)
library(learnr)
```
library(devtools)
library(usethis)
library(roxygen2)
library(learnr)
library(tidyverse)
library(dsbox)
insinstall.packages(dsbox)
insinstall.packages("dsbox")
install.packages("dsbox")
install.packages("infe")
install.packages("infer")
install.packages("ghclass")
remotes::install_github("rundel/ghclass")
remotes::install_github("rundel/ghclass@peer_review")
github_test_token()
library(uawthi)
library(usethis)
github_test_token()
usethis::browse_github_token.
usethis::browse_github_token
usethis::browse_github_token()
org_sitrep("ghclass-vignette")
library(ghclass)
org_sitrep("ghclass-vignette")
org_sitrep("ghclass-vignette")
repo_is_template("Sta323-Sp19/hw1")
org_repos("ghclass-vignette")
org_repos("ghclass-vignette", filter="hw1-team")
install.packages("r5r")
options(java.parameters = "-Xmx2G")
library(r5r)
install.packages("JavaGD")
if(Sys.getenv("JAVA_HOME")!=""){
Sys.setenv(JAVA_HOME="")
}
library(rJava)
install.packages("rjava")
install.packages("rJava")
library(r5r)
options(java.parameters = "-Xmx2G")
library(r5r)
library(swirl
library(swirl)
swirl()
View(flags)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11]
flag_colors <- flags[,11:17]
head(flag_colors
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags,unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(unique_vals,unique)
a <- sapply(unique_vals,unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
knitr::opts_chunk$set(echo = TRUE)
library("ggmap")
library("dplyr")
library("forcats")
library("tidyverse")
library("ggplot2")
library("sf")
library(readr)
rmsp <- read_delim("D:/google_drive/00/geocoding/RMSP/rmsp.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE)
View(rmsp)
#Register Google API
register_google(key = "AIzaSyARe5o5omZBA5ejSM35t2gYtHPKlf65D0s")
geo_df <- as.data.frame(rmsp)
locations_df <- mutate_geocode(geo_df, address)
class(rmsp)
locations_df <- mutate_geocode(rmsp, address)
View(rmsp)
View(rmsp)
View(rmsp)
locations_df <- mutate_geocode(rmsp, addr)
save.image("D:/google_drive/00/save.RData")
write.csv(locations_df, "D:/google_drive/00/geocoding/rmsp/geocoded_rmsp.csv", row.names = FALSE)
rmsp <- read_delim("D:/google_drive/00/geocoding/rmbh/rmbh.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE)
rmsp <- read_delim("D:/google_drive/00/geocoding/rmbh/rmbh.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE)
rmbh <- read_delim("D:/google_drive/00/geocoding/rmbh/rmbh.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE)
View(rmbh)
library("ggmap")
library("dplyr")
library("forcats")
library("tidyverse")
library("ggplot2")
library("sf")
#Register Google API
register_google(key = "AIzaSyARe5o5omZBA5ejSM35t2gYtHPKlf65D0s")
View(rmbh)
locations_df <- mutate_geocode(rmbh, addr)
View(locations_df)
library(readr)
rmbh <- read_delim("D:/google_drive/00/geocoding/rmbh/rmbh.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE)
library("ggmap")
library("dplyr")
library("forcats")
library("tidyverse")
library("ggplot2")
library("sf")
#Register Google API
register_google(key = "AIzaSyARe5o5omZBA5ejSM35t2gYtHPKlf65D0s")
locations_df <- mutate_geocode(rmbh, addr)
write.csv(locations_df, "D:/google_drive/00/geocoding/rmbh/geocoded_rmbh.csv", row.names = FALSE)
options(htmltools.dir.version = FALSE)
knitr::include_graphics("https://retaoliveira.github.io/relements/figures/welcome_to_rstats_twitter.png")
knitr::include_graphics("https://retaoliveira.github.io/relements/figures/welcome_to_rstats_twitter.png")
knitr::include_graphics("https://retaoliveira.github.io/relements/figures/welcome_to_rstats_twitter.png")
swirl()
library(swirl)
install_course()
swirl()
swirl()
bye()
library(swirl)
install_course()
swirl()
bye()
library(swirl)
install_course()
swirl()
install.packages("Tmisc")
install.packages("RefManageR")
remotes::install_github("ROpenSci/bibtex")
install.packages("bench")
setwd("D:/OneDrive - cefetmg.br/01_disciplinas/ERE/2020_2/R_ppga/01_aulas/class06_datapos")
bench::system_time(rmarkdown::render("index.Rmd", quiet = TRUE))
bench::system_time(rmarkdown::render("index.Rmd", quiet = TRUE))
bench::system_time(rmarkdown::render("index.Rmd", quiet = TRUE))
